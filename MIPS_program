#MIPS Program
.data 

#prompt user to enter number N, N>=25
user_prompt: .asciiz "Please enter an integer number that is greater than or equal to 25! \n"

#error_message if N is 0, negative, or less than 25 and positive
illegal_error: .asciiz "Illegal Number! \n"

#Finonacci Message that starts the sequence
fibonacci_seq: .asciiz "Fibonacci sequence: \n"

.text
main: 
  #Print prompt message 

  li $v0, 4  #system call for printing string
  la $a0, user_prompt  #loads the address and prints the user_prompt
  syscall

  #read integer input
  li $v0, 5
  syscall
  move $t0, $v0 #save the input to temporary variable $t0

  #check if N is legal
  beq $t0, $zero, if_illegal #checks if N is equal to 0
  li $t1, 25 #loads 25 in temporary variable t1
  blt $t0, $t1, if_illegal # checks if N is less than 25
  blt $t0, $zero, if_illegal #checks if N is less than 0

  #if N is legal, print the Fibonacci message
  la $a0, fibonacci_seq
  li $v0, 4
  syscall

  #start the fibonacci sequence with 1 and 0
  li $t2, 0
  li $t3, 1

  #print the first two numbers
  li $v0, 1
  move $a0, $t2  #moves value of $t2 into $a0 
  syscall

  li $v0, 11  #print a space after first value
  li $a0, 32
  syscall

  li $v0, 1  #print the second value
  move $a0, $t3
  syscall

  li $v0, 11 #print space after second value
  li $a0, 32
  syscall

#calculate Fibonacci sequence
  sub $t0, $t0, 2
  #run fibonacci loop here

fibonacci_loop:
  #calculate the fibonacci number
  add $t4, $t2, $t3

  #print the fibonacci number
  li $v0, 11
  move $a0, $t4
  syscall

  li $v0, 11 #print space
  li $a0, 32
  syscall 

  #update values for the next iteration
  move $t2, $t3
  move $t3, $t4
  
if_illegal:
  #runs if number is illegal
  li $v0, 4
  la $a0, illegal_error
  syscall
  j main #will jump back to main and repeat the loop
